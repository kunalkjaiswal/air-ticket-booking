{"version":3,"sources":["components/banner/Banner.js","components/passengerDetails/PassengerDetails.js","containers/booking/Booking.js","App.js","reportWebVitals.js","index.js"],"names":["Banner","bannerText","className","PassengerDetails","id","addPassengerData","index","passenger","type","value","firstName","onChange","e","target","gender","date","dob","maxDate","Date","Booking","props","checkSeatAvailability","_this","state","setState","errorMsg","validFormEntry","seatStatus","passengerDetails","i","numberOfTravellers","passengerObj","bookingId","getTime","middleName","lastName","passportNo","push","currentPage","ex","console","log","source","destination","departureDate","tripType","returnDate","setHours","availableReturnSeat","availableDepartureSeat","bookedSeatsDetails","filter","seat","length","property","itemIndex","findIndex","confirmBooking","validateBooking","pnrNo","Math","random","toString","slice","toUpperCase","seatObj","Swal","fire","data","locations","totalAvailableSeats","this","renderFlightForm","onClick","map","location","disabled","number","renderPassengersForm","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8424d21.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Banner.css';\r\n\r\nfunction Banner({bannerText}){\r\n    return(\r\n        <div className=\"banner-section\">\r\n            <div className=\"banner\">\r\n                <span className=\"banner-text\">{bannerText}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Banner;","import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\n\r\nimport './PassengerDetails.css';\r\n\r\nfunction PassengerDetails({ id, addPassengerData, index, passenger }) {\r\n    return (\r\n        <div className=\"passenger-section\">\r\n            <div className=\"passenger-title-blk\">\r\n                <label className=\"passenger-title\">#{index} Passenger details</label>\r\n            </div>\r\n            <div className=\"passenger-data\">\r\n                <div className=\"row\">\r\n                    <div className='col-sm-4 input-blk'>\r\n                        <label className=\"input-label\">First name<label className='asterik'>*</label></label>\r\n                        <input type='text' className='passenger-input' value={passenger.firstName} onChange={(e) => { addPassengerData(id, 'firstName', e.target.value) }} />\r\n                    </div>\r\n                    <div className='col-sm-4 input-blk'>\r\n                        <label className=\"input-label\">Middle name</label>\r\n                        <input type='text' className='passenger-input' onChange={(e) => { addPassengerData(id, 'middleName', e.target.value) }} />\r\n                    </div>\r\n                    <div className='col-sm-4 input-blk'>\r\n                        <label className=\"input-label\">Last name</label>\r\n                        <input type='text' className='passenger-input' onChange={(e) => { addPassengerData(id, 'lastName', e.target.value) }} />\r\n                    </div>\r\n                    <div className='col-sm-4 input-blk'>\r\n                        <label className=\"input-label\">Gender<label className='asterik'>*</label></label>\r\n                        <select value={passenger.gender} className='passenger-input' onChange={(e) => { addPassengerData(id, 'gender', e.target.value) }}>\r\n                            <option value=''>Select</option>\r\n                            <option value='Male'>Male</option>\r\n                            <option value='Female'>Female</option>\r\n                            <option value='Other'>Other</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='col-sm-4 input-blk'>\r\n                        <label className=\"input-label\">D.O.B<label className='asterik'>*</label></label>\r\n                        <DatePicker\r\n                            className='passenger-input'\r\n                            onChange={(date) => { addPassengerData(id, 'dob', date) }}\r\n                            value={passenger.dob}\r\n                            maxDate={new Date()}\r\n                        />\r\n                    </div>\r\n                    <div className='col-sm-4 input-blk'>\r\n                        <label className=\"input-label\">Passport number<label className='asterik'>*</label></label>\r\n                        <input type='text' className='passenger-input' onChange={(e) => { addPassengerData(id, 'passportNo', e.target.value) }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PassengerDetails;","import React, { Component } from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport PassengerDetails from '../../components/passengerDetails/PassengerDetails';\r\nimport './Booking.css';\r\n\r\n\r\nclass Booking extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            departureDate: null,\r\n            returnDate: null,\r\n            source: '',\r\n            destination: '',\r\n            numberOfTravellers: 1,\r\n            tripType: 'One-way',\r\n            errorMsg: '',\r\n            locations: ['Bangalore(BLR)', 'San Francisco(SFO)'],\r\n            currentPage: 'flightDetails',\r\n            bookedSeatsDetails: [],\r\n            totalAvailableSeats: 12,\r\n            passengerDetails: []\r\n        }\r\n    }\r\n\r\n    checkSeatAvailability = () => {\r\n        try {\r\n            const _this = this.state;\r\n            this.setState({ errorMsg: '' });\r\n            if (this.validFormEntry() && this.seatStatus()) {\r\n                const passengerDetails = [];\r\n                for (let i = 0; i < _this.numberOfTravellers; i++) {\r\n                    const passengerObj = {\r\n                        bookingId: new Date().getTime() + i,\r\n                        firstName: '',\r\n                        middleName: '',\r\n                        lastName: '',\r\n                        gender: '',\r\n                        dob: '',\r\n                        passportNo: ''\r\n                    }\r\n                    passengerDetails.push(passengerObj)\r\n                }\r\n                this.setState({ currentPage: 'passengerDetails', passengerDetails, errorMsg: '' });\r\n            }\r\n        }\r\n        catch (ex) {\r\n            console.log(ex)\r\n        }\r\n    }\r\n\r\n    validFormEntry = () => {\r\n        try {\r\n            const _this = this.state;\r\n            if (_this.source === '' || _this.destination === '' || _this.departureDate === null || _this.departureDate === '') {\r\n                this.setState({ errorMsg: 'All * marked fields are mandatory.' });\r\n                return false;\r\n            }\r\n            else {\r\n                if (_this.tripType === 'Round-trip' && (_this.returnDate === null || _this.returnDate === '')) {\r\n                    this.setState({ errorMsg: 'All * marked fields are mandatory.' });\r\n                    return false;\r\n                }\r\n                if (_this.source === _this.destination) {\r\n                    this.setState({ errorMsg: \"From and To can't be same.\" });\r\n                    return false;\r\n                }\r\n                if (new Date((_this.departureDate).setHours(0, 0, 0, 0)) < new Date().setHours(0, 0, 0, 0)) {\r\n                    this.setState({ errorMsg: \"Departure can't be before today's date.\" });\r\n                    return false;\r\n                }\r\n                if ((_this.tripType === 'Round-trip') && new Date((_this.departureDate).setHours(0, 0, 0, 0)) >= new Date((_this.returnDate).setHours(0, 0, 0, 0))) {\r\n                    this.setState({ errorMsg: \"Departure must be before return date.\" });\r\n                    return false;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        catch (ex) {\r\n            console.log(ex)\r\n        }\r\n    }\r\n\r\n    seatStatus = () => {\r\n        try {\r\n            const _this = this.state;\r\n            const availableDepartureSeat = 12 - _this.bookedSeatsDetails.filter(seat => seat.source === _this.source && seat.destination === _this.destination && (_this.departureDate).setHours(0, 0, 0, 0) === seat.date.setHours(0, 0, 0, 0)).length;\r\n            let availableReturnSeat;\r\n            if (_this.tripType === 'Round-trip') {\r\n                availableReturnSeat = 12 - _this.bookedSeatsDetails.filter(seat => seat.source === _this.destination && seat.destination === _this.source && (_this.returnDate).setHours(0, 0, 0, 0) === seat.date.setHours(0, 0, 0, 0)).length;\r\n            }\r\n            if ((_this.departureDate).setHours(0, 0, 0, 0) === new Date().setHours(0, 0, 0, 0)) {\r\n                this.setState({ errorMsg: \"No seat is available for selected departure date.\" });\r\n                return false;\r\n            }\r\n            if (_this.tripType === 'Round-trip' && (availableDepartureSeat < _this.numberOfTravellers || availableReturnSeat < _this.numberOfTravellers)) {\r\n                this.setState({ errorMsg: `Number of seats available for selected dates: Departure- ${availableDepartureSeat} Return- ${availableReturnSeat}` });\r\n                return false;\r\n            }\r\n            if (availableDepartureSeat < _this.numberOfTravellers) {\r\n                this.setState({ errorMsg: `Number of seats available for selected departure date- ${availableDepartureSeat}` });\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (ex) {\r\n            console.log(ex)\r\n        }\r\n\r\n    }\r\n\r\n    addPassengerData = (id, property, value) => {\r\n        try {\r\n            const passengerDetails = this.state.passengerDetails;\r\n            const itemIndex = passengerDetails.findIndex(passenger => passenger.bookingId === id);\r\n            passengerDetails[itemIndex][property] = value;\r\n            this.setState({ passengerDetails });\r\n        }\r\n        catch (ex) {\r\n            console.log(ex)\r\n        }\r\n    }\r\n\r\n    confirmBooking = () => {\r\n        try {\r\n            const _this = this.state;\r\n            const bookedSeatsDetails = _this.bookedSeatsDetails;\r\n            this.setState({ errorMsg: '' })\r\n            if (this.validateBooking()) {\r\n                let pnrNo = Math.random().toString(36).slice(2).toUpperCase();\r\n                for (let i = 0; i < _this.passengerDetails.length; i++) {\r\n                    const seatObj = {\r\n                        ..._this.passengerDetails[i],\r\n                        date: _this.departureDate,\r\n                        source: _this.source,\r\n                        destination: _this.destination,\r\n                        pnrNo\r\n                    }\r\n                    bookedSeatsDetails.push(seatObj);\r\n                }\r\n                if (_this.tripType === 'Round-trip') {\r\n                    pnrNo = Math.random().toString(36).slice(2).toUpperCase();\r\n                    for (let i = 0; i < _this.passengerDetails.length; i++) {\r\n                        const seatObj = {\r\n                            ..._this.passengerDetails[i],\r\n                            date: _this.returnDate,\r\n                            source: _this.destination,\r\n                            destination: _this.source,\r\n                            pnrNo\r\n                        }\r\n                        bookedSeatsDetails.push(seatObj);\r\n                    }\r\n                }\r\n                Swal.fire(\r\n                    'Success!',\r\n                    'Your ticket is booked!',\r\n                    'success'\r\n                )\r\n                this.setState({\r\n                    bookedSeatsDetails,\r\n                    departureDate: null,\r\n                    returnDate: null,\r\n                    source: '',\r\n                    destination: '',\r\n                    numberOfTravellers: 1,\r\n                    tripType: 'One-way',\r\n                    errorMsg: '',\r\n                    currentPage: 'flightDetails',\r\n                    passengerDetails: []\r\n                });\r\n            }\r\n        }\r\n        catch (ex) {\r\n            console.log(ex)\r\n        }\r\n    }\r\n\r\n    validateBooking = () => {\r\n        try {\r\n            const invalidPassengerData = this.state.passengerDetails.filter((data) => data.firstName === '' || data.gender === '' || data.dob === '' || data.passportNo === '')\r\n            if (invalidPassengerData.length > 0) {\r\n                this.setState({ errorMsg: 'All * marked fields are mandatory.' });\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        catch (ex) {\r\n            console.log(ex)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const noOfTravellers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n        const { errorMsg, departureDate, returnDate, locations, tripType, source, destination, numberOfTravellers, currentPage, passengerDetails } = this.state;\r\n        const renderFlightForm = (\r\n            <div className=\"booking-form\">\r\n                <div className=\"form-field\">\r\n                    <div className=\"trip-blk\">\r\n                        <div className={tripType === 'One-way' ? \"trip-option selected-trip\" : \"trip-option\"} onClick={() => this.setState({ tripType: 'One-way' })}>\r\n                            <label className='trip-type'>One-way</label>\r\n                        </div>\r\n                        <div className={tripType === 'Round-trip' ? \"trip-option selected-trip\" : \"trip-option\"} onClick={() => this.setState({ tripType: 'Round-trip' })}>\r\n                            <label className=\"trip-type\">Round-trip</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <div className=\"field-blk\">\r\n                        <label className='field-title'>From</label><label className='asterik'>*</label>\r\n                    </div>\r\n                    <div className=\"field-input\">\r\n                        <select onChange={(e) => this.setState({ source: e.target.value })} value={source}>\r\n                            <option value=''>Select</option>\r\n                            {locations.map((location, i) => <option value={location} key={i}>{location}</option>)}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <div className=\"field-blk\">\r\n                        <label className='field-title'>To</label><label className='asterik'>*</label>\r\n                    </div>\r\n                    <div className=\"field-input\">\r\n                        <select onChange={(e) => this.setState({ destination: e.target.value })} value={destination}>\r\n                            <option value=''>Select</option>\r\n                            {locations.map((location, i) => <option value={location} key={i}>{location}</option>)}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-field row\">\r\n                    <div className=\"date-blk p-r-10 col-sm-6\">\r\n                        <div className=\"field-blk\">\r\n                            <label className='field-title'>Departure</label><label className='asterik'>*</label>\r\n                        </div>\r\n                        <div className=\"field-input\">\r\n                            <DatePicker\r\n                                onChange={(date) => { this.setState({ departureDate: date }) }}\r\n                                value={departureDate}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"date-blk p-l-10 col-sm-6\">\r\n                        <div className=\"field-blk\">\r\n                            <label className='field-title'>Return</label>\r\n                            {\r\n                                tripType === 'Round-trip' ? <label className='asterik'>*</label> : null\r\n                            }\r\n                        </div>\r\n                        <div className=\"field-input\">\r\n                            <DatePicker\r\n                                onChange={(date) => { this.setState({ returnDate: date }) }}\r\n                                value={returnDate}\r\n                                disabled={tripType === 'One-way'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <div className=\"field-blk\">\r\n                        <label className='field-title'>No. of travellers</label><label className='asterik'>*</label>\r\n                    </div>\r\n                    <div className=\"field-input\">\r\n                        <select onChange={(e) => { this.setState({ numberOfTravellers: e.target.value }) }} value={numberOfTravellers}>\r\n                            {noOfTravellers.map((number, i) => <option value={number} key={i}>{number}</option>)}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    errorMsg.length > 0 ?\r\n                        <div className=\"form-field\">\r\n                            <div className=\"error-blk\">\r\n                                <label className='errorMsg'>{errorMsg}</label>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        null\r\n                }\r\n                <div className=\"form-field\">\r\n                    <div className=\"button-blk\">\r\n                        <input type=\"button\" className=\"button\" value=\"Proceed\" onClick={this.checkSeatAvailability} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n        const renderPassengersForm = (\r\n            <div>\r\n                {\r\n                    passengerDetails.map((passenger, i) => {\r\n                        return (\r\n                            <PassengerDetails key={i} index={i + 1} id={passenger.bookingId} passenger={passenger} addPassengerData={this.addPassengerData} />\r\n\r\n                        )\r\n                    })\r\n                }\r\n                {errorMsg ?\r\n                    <div className=\"error-blk passenger-error\">\r\n                        <label className='errorMsg'>{errorMsg}</label>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n                <div className=\"button-blk\">\r\n                    <input type=\"button\" className=\"button\" value=\"Proceed\" onClick={this.confirmBooking} />\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div className=\"booking-section\">\r\n                {\r\n                    currentPage === 'flightDetails' ?\r\n                        renderFlightForm\r\n                        :\r\n                        renderPassengersForm\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Booking;","import './App.css';\nimport Banner from '../src/components/banner/Banner';\nimport Booking from '../src/containers/booking/Booking';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"main-page\">\n          <Banner bannerText='Air Ticket Booking'/>\n          <Booking/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}